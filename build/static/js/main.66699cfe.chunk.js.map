{"version":3,"sources":["Components/Edit-Box.jsx","Components/Display-Box.jsx","Components/ValuePlaceholder.jsx","Components/TitleContainer.jsx","Components/DocumentContainer.jsx","Components/AppLogic.jsx","Components/SkillsContainer.jsx","Components/JobContainer.jsx","Components/WorkExperienceContainer.jsx","Components/EduContainer.jsx","Components/EduExperienceContainer.jsx","App.js","index.js"],"names":["EditBox","props","handleChange","e","setState","value","target","componentDidMount","input","current","focus","handleKeyPress","keyCode","save","React","createRef","state","type","defaultValue","this","original","onChange","ref","onFocus","select","className","class","onClick","Component","DisplayBox","canEdit","canDelete","edit","classNames","data-key","dataKey","Placeholder","handleClick","prevState","editMode","handleSave","preventDefault","previousSibling","name","TitleContainer","DocumentContainer","Children","map","children","child","isValidElement","cloneElement","maxKeyInArray","array","Math","max","apply","o","id","SkillsContainer","handleAdd","x","placeholder","concat","handleDelete","toDelete","textContent","filter","word","TransitionGroup","CSSTransition","unmountOnExit","timeout","JobContainer","roles","parseInt","parentNode","dataset","key","role","WorkExperienceContainer","jobs","length","job","EduContainer","quals","console","log","qual","EduExperienceContainer","edus","edu","App","defaultChecked","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66699cfe.chunk.js","sourcesContent":["import React from 'react';\nimport './ValuePlaceholder.css';\n\nclass EditBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.input = React.createRef();\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ value: e.target.value });\n  };\n\n  componentDidMount = () => {\n    this.input.current.focus();\n  };\n\n  handleKeyPress = (e) => {\n    if (e.keyCode !== 13) return;\n    this.props.save();\n  };\n\n  render() {\n    return (\n      <div>\n        <form>\n          <input\n            type='text'\n            defaultValue={this.props.original}\n            onChange={this.handleChange}\n            ref={this.input}\n            onFocus={(e) => e.target.select()}\n            className={this.props.class}\n          />\n          <input type='submit' onClick={this.props.save} className='save-button' />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditBox;\n","import React from 'react';\nimport './ValuePlaceholder.css';\nimport classNames from 'classnames';\n\nclass DisplayBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ value: e.target.value });\n  };\n\n  render() {\n    let canEdit;\n    let canDelete;\n    if (this.props.canEdit) canEdit = <button onClick={this.props.edit} className='edit-button'></button>;\n    if (this.props.canEdit && this.props.canDelete) canDelete = <button onClick={this.props.canDelete} className='delete-button'></button>;\n    return (\n      <div className={classNames(this.props.class ?? 'display-box', this.props.canEdit ? 'hover' : '')} data-key={this.props.dataKey}>\n        {this.props.value}\n        {canEdit}\n        {canDelete}\n      </div>\n    );\n  }\n}\n\nexport default DisplayBox;\n","import React from 'react';\nimport EditBox from './Edit-Box';\nimport DisplayBox from './Display-Box';\n\nclass Placeholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { editMode: this.props.edit ?? false, value: this.props.name };\n  }\n\n  handleClick = () => {\n    this.setState((prevState) => ({\n      editMode: !prevState.editMode,\n    }));\n  };\n\n  handleSave = (e) => {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      editMode: !prevState.editMode,\n      value: e.target.previousSibling.value,\n    }));\n  };\n\n  render() {\n    return this.state.editMode ? (\n      <EditBox original={this.state.value} save={this.handleSave} class={this.props.class} />\n    ) : (\n      <DisplayBox\n        value={this.state.value}\n        edit={this.handleClick}\n        canEdit={this.props.canEdit}\n        class={this.props.class}\n        canDelete={this.props.canDelete}\n        dataKey={this.props.dataKey}\n      />\n    );\n  }\n}\n\nexport default Placeholder;\n","import React from 'react';\nimport Placeholder from './ValuePlaceholder';\nimport './TitleContainer.css';\n\nclass TitleContainer extends React.Component {\n  render() {\n    return (\n      <div className='title-container'>\n        <div className='name'>\n          <Placeholder name='Your Name' className='heading' canEdit={this.props.canEdit} class='h2' />\n        </div>\n        <div className='contact-details'>\n          <Placeholder name='Telephone' canEdit={this.props.canEdit} class='contact' />\n          <Placeholder name='Email' canEdit={this.props.canEdit} class='contact' />\n          <Placeholder name='Website' canEdit={this.props.canEdit} class='contact' />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TitleContainer;\n","import React from 'react';\nimport './DocumentContainer.css';\n\nclass DocumentContainer extends React.Component {\n  render() {\n    return (\n      <div className='document-container'>\n        {React.Children.map(this.props.children, (child) => {\n          if (React.isValidElement(child)) {\n            return React.cloneElement(child, { canEdit: this.props.canEdit });\n          }\n        })}\n      </div>\n    );\n  }\n}\n\nexport default DocumentContainer;\n","const maxKeyInArray = (array) => {\n  const max = Math.max.apply(\n    Math,\n    array.map((o) => o.id)\n  );\n  return max;\n};\n\nexport default maxKeyInArray;\n","import React from 'react';\nimport Placeholder from './ValuePlaceholder';\nimport maxKeyInArray from './AppLogic';\nimport './SkillsContainer.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nclass SkillsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholder: [\n        { id: 1, name: 'JavaScript' },\n        { id: 2, name: 'NPM' },\n        { id: 3, name: 'Webpack' },\n        { id: 4, name: 'React' },\n      ],\n    };\n  }\n\n  handleAdd = () => {\n    const x = maxKeyInArray(this.state.placeholder);\n    this.setState((state) => ({\n      placeholder: state.placeholder.concat({ id: x + 1, name: 'enter name here' }),\n    }));\n  };\n\n  handleDelete = (e) => {\n    const toDelete = e.target.previousSibling.previousSibling.textContent;\n    this.setState((state) => ({\n      placeholder: state.placeholder.filter((word) => word.name !== toDelete),\n    }));\n  };\n\n  render() {\n    let canEdit;\n    if (this.props.canEdit) canEdit = <button onClick={this.handleAdd} className='add-button'></button>;\n    return (\n      <div className='skills-container'>\n        <div className='skills-heading'>\n          <h2>Skills</h2>\n          {canEdit}\n        </div>\n        <TransitionGroup className='skills-list'>\n          {this.state.placeholder.map((name) => (\n            <CSSTransition key={name.id} unmountOnExit classNames='name' timeout={300}>\n              <Placeholder name={name.name} key={name.id} canEdit={this.props.canEdit} canDelete={this.handleDelete} class='skill' />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default SkillsContainer;\n","import React from 'react';\nimport maxKeyInArray from './AppLogic';\nimport Placeholder from './ValuePlaceholder';\nimport './JobContainer.css';\n\nclass JobContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roles: [\n        { id: 1, name: 'Enter Some Details on Your Responsibilites/Achievements Here' },\n        { id: 2, name: 'Enter Some Details on Your Responsibilites/Achievements Here' },\n        { id: 3, name: 'Enter Some Details on Your Responsibilites/Achievements Here' },\n      ],\n    };\n  }\n\n  handleClick = () => {\n    const x = maxKeyInArray(this.state.roles);\n    this.setState((state) => ({\n      roles: state.roles.concat({ id: x + 1, name: 'Enter Some Details on Your Experience Here', edit: 'true' }),\n    }));\n  };\n\n  handleDelete = (e) => {\n    const toDelete = parseInt(e.target.parentNode.dataset.key);\n    this.setState((state) => ({\n      roles: state.roles.filter((role) => role.id !== toDelete),\n    }));\n  };\n\n  render() {\n    let canEdit;\n    let canDelete;\n    if (this.props.canEdit) canEdit = <button onClick={this.handleClick}>Add Row</button>;\n    if (this.props.canEdit && this.props.canDelete) canDelete = <button onClick={this.props.canDelete}>Delete Job</button>;\n    const roles = this.state.roles.map((role) => {\n      return (\n        <div className='list-item' key={role.id}>\n          <li></li>\n          <Placeholder\n            key={role.id}\n            dataKey={role.id}\n            name={role.name}\n            edit={role.edit ?? false}\n            canEdit={this.props.canEdit}\n            canDelete={this.handleDelete}\n          />\n        </div>\n      );\n    });\n    return (\n      <div className='job-container' data-key={this.props.dataKey}>\n        <div className='job-heading'>\n          <div className='job-title'>\n            <Placeholder name={this.props.name} canEdit={this.props.canEdit} class='b' />\n            <p> - </p>\n            <Placeholder name='Enter Company Name' canEdit={this.props.canEdit} class='b' />\n          </div>\n          <div className='job-from-to'>\n            <Placeholder name='From' canEdit={this.props.canEdit} class='b' />\n            <p> - </p>\n            <Placeholder name='To' canEdit={this.props.canEdit} class='b' />\n            {canDelete}\n          </div>\n        </div>\n        <div className='job-roles'>{roles}</div>\n        {canEdit}\n      </div>\n    );\n  }\n}\n\nexport default JobContainer;\n","import React from 'react';\nimport maxKeyInArray from './AppLogic';\nimport JobContainer from './JobContainer';\nimport './WorkExperienceContainer.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nclass WorkExperienceContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { jobs: [{ id: 1, name: 'Enter Job Title' }] };\n  }\n\n  handleAdd = () => {\n    let x;\n    if (this.state.jobs.length < 1) x = 1;\n    else x = maxKeyInArray(this.state.jobs);\n    this.setState((state) => ({\n      jobs: state.jobs.concat({ id: x + 1, name: 'Enter Job Title' }),\n    }));\n  };\n\n  handleDelete = (e) => {\n    const toDelete = parseInt(e.target.parentNode.parentNode.parentNode.dataset.key);\n    this.setState((state) => ({\n      jobs: state.jobs.filter((job) => job.id !== toDelete),\n    }));\n  };\n\n  render() {\n    let canEdit;\n    if (this.props.canEdit) canEdit = <button onClick={this.handleAdd} className='add-button'></button>;\n    return (\n      <div className='work-experience-container'>\n        <div className='work-experience-heading'>\n          <h2>Work Experience</h2>\n          {canEdit}\n        </div>\n        <TransitionGroup className='jobs-list'>\n          {this.state.jobs.map((job) => (\n            <CSSTransition key={job.id} unmountOnExit classNames='job' timeout={500}>\n              <JobContainer name={job.name} key={job.id} dataKey={job.id} canEdit={this.props.canEdit} canDelete={this.handleDelete} />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default WorkExperienceContainer;\n","import React from 'react';\nimport maxKeyInArray from './AppLogic';\nimport Placeholder from './ValuePlaceholder';\nimport './EduContainer.css';\n\nclass EduContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { quals: [{ id: 1, name: 'Enter details of qualifications here' }] };\n  }\n\n  handleAdd = () => {\n    const x = maxKeyInArray(this.state.quals);\n    this.setState((state) => ({\n      quals: state.quals.concat({ id: x + 1, name: 'Enter details of qualifications here', edit: 'true' }),\n    }));\n  };\n\n  handleDelete = (e) => {\n    const toDelete = parseInt(e.target.parentNode.dataset.key);\n    console.log(toDelete);\n    this.setState((state) => ({\n      quals: state.quals.filter((qual) => qual.id !== toDelete),\n    }));\n  };\n\n  render() {\n    let canEdit;\n    let canDelete;\n    if (this.props.canEdit) canEdit = <button onClick={this.handleAdd}>Add Row</button>;\n    if (this.props.canEdit && this.props.canDelete) canDelete = <button onClick={this.props.canDelete}>Delete Edu</button>;\n    const quals = this.state.quals.map((qual) => {\n      return (\n        <div className='list-item' key={qual.id}>\n          <li></li>\n          <Placeholder\n            key={qual.id}\n            dataKey={qual.id}\n            name={qual.name}\n            edit={qual.edit ?? false}\n            canEdit={this.props.canEdit}\n            canDelete={this.handleDelete}\n          />\n        </div>\n      );\n    });\n    return (\n      <div className='edu-container' data-key={this.props.dataKey}>\n        <div className='edu-heading'>\n          <div className='edu-title'>\n            <Placeholder name='Enter Education Body' canEdit={this.props.canEdit} class='b' />\n            <p> - </p>\n            <Placeholder name='Enter Qualification Name' canEdit={this.props.canEdit} class='b' />\n          </div>\n          <div className='edu-from-to'>\n            <Placeholder name='From' canEdit={this.props.canEdit} class='b' />\n            <p> - </p>\n            <Placeholder name='To' canEdit={this.props.canEdit} class='b' />\n            {canDelete}\n          </div>\n        </div>\n        <div className='edu-roles'>{quals}</div>\n        {canEdit}\n      </div>\n    );\n  }\n}\n\nexport default EduContainer;\n","import React from 'react';\nimport maxKeyInArray from './AppLogic';\nimport EduContainer from './EduContainer';\nimport './EduExperienceContainer.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nclass EduExperienceContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { edus: [{ id: 1 }] };\n  }\n\n  handleAdd = () => {\n    let x;\n    if (this.state.edus.length < 1) x = 1;\n    else x = maxKeyInArray(this.state.edus);\n    this.setState((state) => ({\n      edus: state.edus.concat({ id: x + 1 }),\n    }));\n  };\n\n  handleDelete = (e) => {\n    const toDelete = parseInt(e.target.parentNode.parentNode.parentNode.dataset.key);\n    this.setState((state) => ({\n      edus: state.edus.filter((edu) => edu.id !== toDelete),\n    }));\n  };\n\n  render() {\n    let canEdit;\n    if (this.props.canEdit) canEdit = <button onClick={this.handleAdd} className='add-button'></button>;\n    return (\n      <div className='edu-experience-container'>\n        <div className='edu-experience-heading'>\n          <h2>Education History</h2>\n          {canEdit}\n        </div>\n        <TransitionGroup className='edu-list'>\n          {this.state.edus.map((edu) => (\n            <CSSTransition key={edu.id} unmountOnExit classNames='job' timeout={300}>\n              <EduContainer name={edu.name} key={edu.id} dataKey={edu.id} canEdit={this.props.canEdit} canDelete={this.handleDelete} />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default EduExperienceContainer;\n","import React from 'react';\nimport './App.css';\nimport Toggle from 'react-toggle';\nimport 'react-toggle/style.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { canEdit: true };\n  }\n\n  handleChange = () => {\n    this.setState((prevState) => ({\n      canEdit: !prevState.canEdit,\n    }));\n  };\n\n  render() {\n    return (\n      <div className='app'>\n        <div className='header'>\n          <span>Preview Mode</span>\n          <Toggle defaultChecked={this.state.canEdit} onChange={this.handleChange} />\n          <span>Edit Mode</span>\n        </div>\n        <div className='body'>\n          {React.Children.map(this.props.children, (child) => {\n            if (React.isValidElement(child)) {\n              return React.cloneElement(child, { canEdit: this.state.canEdit });\n            }\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TitleContainer from './Components/TitleContainer';\nimport DocumentContainer from './Components/DocumentContainer';\nimport SkillsContainer from './Components/SkillsContainer';\nimport WorkExperienceContainer from './Components/WorkExperienceContainer';\nimport EduExperienceContainer from './Components/EduExperienceContainer';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App>\n      <DocumentContainer>\n        <TitleContainer />\n        <SkillsContainer />\n        <WorkExperienceContainer />\n        <EduExperienceContainer />\n      </DocumentContainer>\n    </App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}